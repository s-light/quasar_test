{"version":3,"sources":["webpack:///./.quasar/import-quasar.js","webpack:///./src/App.vue?05ba","webpack:///./src/App.vue?523b","webpack:///./src/App.vue?23bf","webpack:///./src/App.vue","webpack:///./src/router/routes.js","webpack:///./src/router/index.js","webpack:///./.quasar/app.js","webpack:///./.quasar/client-entry.js","webpack:///./src/css/app.styl"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqC;AACgB;AAC/B;AACgjD;AACtkD,kCAAG,KAAK,6BAAM;AACd;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH,QAAQ,wBAAI;AACZ,WAAW,0CAAO;AAClB;AACA,aAAa,0BAAO;AACpB,aAAa,0BAAO;AACpB,aAAa,0BAAO;AACpB,oBAAoB,iCAAc;AAClC,WAAW,wBAAK;AAChB,cAAc,2BAAQ;AACtB,mBAAmB,gCAAa;AAChC,UAAU,uBAAI;AACd,WAAW,wBAAK;AAChB,WAAW,wBAAK;AAChB,WAAW,wBAAK;AAChB,kBAAkB,+BAAY;AAC9B,gBAAgB,6BAAU;AAC1B,YAAY,yBAAM;AAClB,aAAa,0BAAO;AACpB,aAAa,0BAAO;AACpB,aAAa,0BAAO;AACpB,aAAa,0BAAO;AACpB,mBAAmB,gCAAa;AAChC,mBAAmB,gCAAa;AAChC,YAAY,yBAAM;AAClB,GAAG;AACH;AACA,YAAY,yBAAM;AAClB,GAAG;AACH;AACA,YAAY,yBAAM;AAClB,kBAAkB,+BAAY;AAC9B,oBAAoB,iCAAc;AAClC;AACA,CAAC,E;;ACvDD,IAAI,uCAAM,gBAAgB,aAAa,0BAA0B,wBAAwB,iBAAiB,OAAO,cAAc;AAC/H;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACe;AACf;AACA,CAAC,E;;ACRiP,CAAgB,+FAAG,EAAC,C;;;;;ACApL;AAC3B;AACL;;;AAGlD;AACuF;AACvF,gBAAgB,8CAAU;AAC1B,EAAE,+BAAM;AACR,EAAE,uCAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,yD;;;;;AClBf;AACA;AACA;AACA,WAAW,oFAA6B;AACxC,GAAG;AACH;AACA;AACA;AACA,aAAa,oFAAmC;AAChD;AACA,GAAG;AACH;AACA;AACA,aAAa,oFAAmC;AAChD;AACA,GAAG;AACH;AACA;AACA,aAAa,oFAAgC;AAC7C;AACA,GAAG;AACH;AACA;AACA,aAAa,oFAAuC;AACpD;AACA,GAAG;AACH;AACA;AACA,aAAa,4HAA+B;AAC5C;AACA,GAAG;AACH;AACA;AACA,aAAa,4HAAkC;AAC/C;AACA,GAAG;AACH;AACA;AACA,aAAa,qFAA0C;AACvD;AACA,GAAG;AACH;AACA;AACA,aAAa,qFAAqC;AAClD;AACA,GAAG;AACH;AACA;AACA,aAAa,qFAAiC;AAC9C;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA,WAAW,6HAAmC;AAC9C,GAAG;AACH;AACA;AACA;AACA,aAAa,oFAAwB;AACrC;AACA,GAAG;AACH,CAAC,EAAE;;AAEH,IAAI,IAA0B;AAC9B;AACA;AACA;AACA,aAAa,qFAA4B;AACzC;AACA,GAAG;AACH;;AAEe,wDAAM,E;;ACzEC;AACa;AACL;AAC9B,kCAAG,KAAK,iCAAS;AACjB;AACA;AACA;AACA;;AAEe;AACf,IAAI,oBAAoB;AACxB;AACA,mBAAmB,iCAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,aAAM;AAClB;AACA;AACA;AACA,UAAU,MAA2B;AACrC,UAAU,EAA2B;AACrC,GAAG;AACH;AACA,C;;AC3BgI;AAC3F;AACsG;;AAE3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;AACM;AACM;AACc;AACjC;AACf;AACA,CAAC;;AAED;AACA,SAAS,0BAAiB,eAAe,qBAAmB;AAC5D;AACA,WAAW,qBAAmB;AAC9B;AACA;AACA;AACA,yBAAyB,UAAY;AACrC;AACA;AACA;;AAEA;AACA,mBAAmB,UAAY;AAC/B,mBAAmB,kCAAG;AACtB,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,UAAY;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,GAAG;AAC5B;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,C;;AC5EgI;AAC3F;AACsG;;AAE3I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACoD;AACM;;AAEzB;AACP;AACJ;AACW;;AAEjC;AACA;AACA;;AAEA;AACA,WAAW,0BAAiB,eAAe,qBAAmB;AAC9D;;AAEA,WAAW,qBAAmB;AAC9B;AACA;AACA;AACA;AACA,mBAAmB,WAAS;;AAE5B;AACA;AACA;AACA;AACA,gBAAgB,kCAAG;;AAEnB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA,Q;;;;;;;ACtDA,uC","file":"js/app.53d78f22.js","sourcesContent":["/**\n * THIS FILE IS GENERATED AUTOMATICALLY.\n * DO NOT EDIT.\n *\n * You are probably looking on adding startup/initialization code.\n * Use \"quasar new boot <name>\" and add it there.\n * One boot file per concern. Then reference the file(s) in quasar.conf.js > boot:\n * boot: ['file', ...] // do not add \".js\" extension to it.\n *\n * Boot files are your \"main.js\"\n **/\nimport lang from 'quasar/lang/en-us';\nimport iconSet from 'quasar/icon-set/material-icons';\nimport Vue from 'vue';\nimport Quasar from 'quasar/src/vue-plugin.js';import QLayout from 'quasar/src/components/layout/QLayout.js';import QHeader from 'quasar/src/components/header/QHeader.js';import QDrawer from 'quasar/src/components/drawer/QDrawer.js';import QPageContainer from 'quasar/src/components/page/QPageContainer.js';import QPage from 'quasar/src/components/page/QPage.js';import QToolbar from 'quasar/src/components/toolbar/QToolbar.js';import QToolbarTitle from 'quasar/src/components/toolbar/QToolbarTitle.js';import QBtn from 'quasar/src/components/btn/QBtn.js';import QIcon from 'quasar/src/components/icon/QIcon.js';import QList from 'quasar/src/components/item/QList.js';import QItem from 'quasar/src/components/item/QItem.js';import QItemSection from 'quasar/src/components/item/QItemSection.js';import QItemLabel from 'quasar/src/components/item/QItemLabel.js';import QInput from 'quasar/src/components/input/QInput.js';import QEditor from 'quasar/src/components/editor/QEditor.js';import QSelect from 'quasar/src/components/select/QSelect.js';import QToggle from 'quasar/src/components/toggle/QToggle.js';import QSlider from 'quasar/src/components/slider/QSlider.js';import QSpinnerGears from 'quasar/src/components/spinner/QSpinnerGears.js';import QSpinnerRadio from 'quasar/src/components/spinner/QSpinnerRadio.js';import QBadge from 'quasar/src/components/badge/QBadge.js';import Ripple from 'quasar/src/directives/Ripple.js';import Notify from 'quasar/src/plugins/Notify.js';import LocalStorage from 'quasar/src/plugins/LocalStorage.js';import SessionStorage from 'quasar/src/plugins/SessionStorage.js';;\nVue.use(Quasar, {\n  config: {\n    \"notify\": {\n      \"position\": \"top\"\n    },\n    \"dark\": \"auto\"\n  },\n  lang: lang,\n  iconSet: iconSet,\n  components: {\n    QLayout: QLayout,\n    QHeader: QHeader,\n    QDrawer: QDrawer,\n    QPageContainer: QPageContainer,\n    QPage: QPage,\n    QToolbar: QToolbar,\n    QToolbarTitle: QToolbarTitle,\n    QBtn: QBtn,\n    QIcon: QIcon,\n    QList: QList,\n    QItem: QItem,\n    QItemSection: QItemSection,\n    QItemLabel: QItemLabel,\n    QInput: QInput,\n    QEditor: QEditor,\n    QSelect: QSelect,\n    QToggle: QToggle,\n    QSlider: QSlider,\n    QSpinnerGears: QSpinnerGears,\n    QSpinnerRadio: QSpinnerRadio,\n    QBadge: QBadge\n  },\n  directives: {\n    Ripple: Ripple\n  },\n  plugins: {\n    Notify: Notify,\n    LocalStorage: LocalStorage,\n    SessionStorage: SessionStorage\n  }\n});","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"q-app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\nexport default {\n  name: 'App'\n};","import mod from \"-!../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/@quasar/app/lib/webpack/loader.transform-quasar-imports.js!../node_modules/babel-loader/lib/index.js??ref--2-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=f8b79544&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var routes = [{\n  path: '/',\n  component: function component() {\n    return import('layouts/MyTests.vue');\n  },\n  children: [{\n    path: '',\n    component: function component() {\n      return import('pages/mytests/welcome.vue');\n    }\n  }, {\n    path: 'welcome',\n    component: function component() {\n      return import('pages/mytests/welcome.vue');\n    }\n  }, {\n    path: 'font',\n    component: function component() {\n      return import('pages/mytests/font.vue');\n    }\n  }, {\n    path: 'font_editor',\n    component: function component() {\n      return import('pages/mytests/font_editor.vue');\n    }\n  }, {\n    path: 'hid',\n    component: function component() {\n      return import('pages/mytests/hid.vue');\n    }\n  }, {\n    path: 'serial',\n    component: function component() {\n      return import('pages/mytests/serial.vue');\n    }\n  }, {\n    path: 'serial_minimal',\n    component: function component() {\n      return import('pages/mytests/serial_minimal.vue');\n    }\n  }, {\n    path: 'bluetooth',\n    component: function component() {\n      return import('pages/mytests/bluetooth.vue');\n    }\n  }, {\n    path: 'about',\n    component: function component() {\n      return import('pages/mytests/about.vue');\n    }\n  }]\n}, {\n  path: '/help',\n  component: function component() {\n    return import('layouts/LayoutExample.vue');\n  },\n  children: [{\n    path: '',\n    component: function component() {\n      return import('pages/Help.vue');\n    }\n  }]\n}]; // Always leave this as last one\n\nif (process.env.MODE !== 'ssr') {\n  routes.push({\n    path: '*',\n    component: function component() {\n      return import('pages/Error404.vue');\n    }\n  });\n}\n\nexport default routes;","import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport routes from \"./routes\";\nVue.use(VueRouter);\n/*\n * If not building with SSR mode, you can\n * directly export the Router instantiation\n */\n\nexport default function ()\n/* { store, ssrContext } */\n{\n  var Router = new VueRouter({\n    scrollBehavior: function scrollBehavior() {\n      return {\n        x: 0,\n        y: 0\n      };\n    },\n    routes: routes,\n    // Leave these as is and change from quasar.conf.js instead!\n    // quasar.conf.js -> build -> vueRouterMode\n    // quasar.conf.js -> build -> publicPath\n    mode: process.env.VUE_ROUTER_MODE,\n    base: process.env.VUE_ROUTER_BASE\n  });\n  return Router;\n}","import _regeneratorRuntime from \"/home/stefan/mydata/github/quasar/quasar_test/node_modules/@babel/runtime-corejs2/regenerator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/stefan/mydata/github/quasar/quasar_test/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\";\n\n/**\n * THIS FILE IS GENERATED AUTOMATICALLY.\n * DO NOT EDIT.\n *\n * You are probably looking on adding startup/initialization code.\n * Use \"quasar new boot <name>\" and add it there.\n * One boot file per concern. Then reference the file(s) in quasar.conf.js > boot:\n * boot: ['file', ...] // do not add \".js\" extension to it.\n *\n * Boot files are your \"main.js\"\n **/\nimport Vue from 'vue';\nimport \"./import-quasar.js\";\nimport App from 'app/src/App.vue';\nimport createRouter from 'app/src/router/index';\nexport default function () {\n  return _ref.apply(this, arguments);\n}\n\nfunction _ref() {\n  _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var router, app;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof createRouter === 'function')) {\n              _context.next = 6;\n              break;\n            }\n\n            _context.next = 3;\n            return createRouter({\n              Vue: Vue\n            });\n\n          case 3:\n            _context.t0 = _context.sent;\n            _context.next = 7;\n            break;\n\n          case 6:\n            _context.t0 = createRouter;\n\n          case 7:\n            router = _context.t0;\n            // Create the app instantiation Object.\n            // Here we inject the router, store to all child components,\n            // making them available everywhere as `this.$router` and `this.$store`.\n            app = {\n              router: router,\n              render: function render(h) {\n                return h(App);\n              }\n            };\n            app.el = '#q-app'; // expose the app, the router and the store.\n            // note we are not mounting the app here, since bootstrapping will be\n            // different depending on whether we are in a browser or on the server.\n\n            return _context.abrupt(\"return\", {\n              app: app,\n              router: router\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _ref.apply(this, arguments);\n}","import _regeneratorRuntime from \"/home/stefan/mydata/github/quasar/quasar_test/node_modules/@babel/runtime-corejs2/regenerator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/stefan/mydata/github/quasar/quasar_test/node_modules/@babel/runtime-corejs2/helpers/asyncToGenerator\";\n\n/**\n * THIS FILE IS GENERATED AUTOMATICALLY.\n * DO NOT EDIT.\n *\n * You are probably looking on adding startup/initialization code.\n * Use \"quasar new boot <name>\" and add it there.\n * One boot file per concern. Then reference the file(s) in quasar.conf.js > boot:\n * boot: ['file', ...] // do not add \".js\" extension to it.\n *\n * Boot files are your \"main.js\"\n **/\nimport '@quasar/extras/roboto-font/roboto-font.css';\nimport '@quasar/extras/material-icons/material-icons.css'; // We load Quasar stylesheet file\n\nimport 'quasar/dist/quasar.styl';\nimport 'src/css/app.styl';\nimport Vue from 'vue';\nimport createApp from \"./app.js\";\n\nfunction start() {\n  return _start.apply(this, arguments);\n}\n\nfunction _start() {\n  _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$createApp, app, router;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return createApp();\n\n          case 2:\n            _yield$createApp = _context.sent;\n            app = _yield$createApp.app;\n            router = _yield$createApp.router;\n            new Vue(app);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _start.apply(this, arguments);\n}\n\nstart();","// extracted by mini-css-extract-plugin"],"sourceRoot":""}