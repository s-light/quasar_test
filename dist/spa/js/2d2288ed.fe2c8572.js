(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["2d2288ed"],{da60:function(t,e,i){"use strict";i.r(e);var r=function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("q-page",{staticClass:"flex column",staticStyle:{"align-items":"center"}},[i("section",{staticClass:"q-mt-md"},[t._v("\n        SerialPort: "+t._s(t.serialPortAvailable)+"\n    ")]),i("q-btn",{directives:[{name:"ripple",rawName:"v-ripple"}],attrs:{label:"refresh port list"},on:{click:function(e){return t.updatePortList()}}}),i("section",{staticClass:"q-mt-md"},t._l(t.deviceList,function(e,r){return i("div",{key:r},[i("pre",[t._v(t._s(e))])])}),0)],1)},s=[],o=i("4db1"),l=i.n(o),a={name:"SerialList",data:function(){return{serialPortAvailable:!1,deviceList:[{comName:"dummyResponder"}]}},methods:{updatePortList:function(){var t=this;if(console.group("updatePortList()"),SerialPort)try{SerialPort.list().then(function(e){var i;console.log("ports",e),t.deviceList=[],(i=t.deviceList).push.apply(i,l()(e))},function(t){console.error("serialport.list:",t)})}catch(e){console.error("SerialPort.list() failed:\n",e)}else this.deviceList=[],console.log("SerialPort not available.");console.groupEnd()}},mounted:function(){this.updatePortList(),SerialPort&&(this.serialPortAvailable=!0)}},n=a,c=i("42e1"),u=Object(c["a"])(n,r,s,!1,null,null,null);e["default"]=u.exports}}]);