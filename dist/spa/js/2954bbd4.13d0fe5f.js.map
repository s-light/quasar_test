{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.array.from.js","webpack:///./src/pages/mytests/hid.vue?391a","webpack:///src/pages/mytests/hid.vue","webpack:///./src/pages/mytests/hid.vue?ad0e","webpack:///./src/pages/mytests/hid.vue","webpack:///./node_modules/core-js/modules/_create-property.js"],"names":["ctx","__webpack_require__","$export","toObject","call","isArrayIter","toLength","createProperty","getIterFn","S","F","iter","Array","from","arrayLike","length","result","step","iterator","O","C","this","aLen","arguments","mapfn","undefined","mapping","index","iterFn","next","done","value","dummyResponder","vendorId","productId","path","serialNumber","manufacturer","product","release","interface","usagePage","usage","mytests_hidvue_type_script_lang_js_","name","data","hidAvailable","device","parser","deviceList","deviceSelected","deviceIsOpen","deviceSearching","deviceConnecting","messagaeToSend","log","methods","toggleConnect","console","group","deviceClose","deviceOpen","groupEnd","_this","concat","startsWith","setTimeout","HID","on","err","$refs","mylog","addEntrySpecial","messageReceive","e","error","_this2","close","messageSend","_this3","recMessage","messgeAsCharCodeArray","map","val","charCodeAt","write","addEntryOut","addEntryIn","search","_this4","devices","_this$deviceList","dummyResponderNew","Object","extend","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","return","push","apply","toConsumableArray_default","computed","mounted","beforeDestroy","isOpen","filters","components","LogView","component","componentNormalizer","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","align-items","min-width","background","attrs","rounded","outlined","label","disable","option-label","item","option-value","options","scopedSlots","_u","key","fn","scope","_g","_b","itemProps","itemEvents","_v","_s","opt","caption","proxy","flat","round","dense","hint","icon","loading","click","$event","model","callback","$$v","expression","style","opacity","ref","update:log","filled","keyup","type","indexOf","_k","keyCode","directives","rawName","__webpack_exports__","$defineProperty","createDesc","module","exports","object","f"],"mappings":"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","file":"js/2954bbd4.13d0fe5f.js","sourcesContent":["'use strict';\nvar ctx = require('./_ctx');\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar toLength = require('./_to-length');\nvar createProperty = require('./_create-property');\nvar getIterFn = require('./core.get-iterator-method');\n\n$export($export.S + $export.F * !require('./_iter-detect')(function (iter) { Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = getIterFn(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('q-page',{staticClass:\"flex column\",staticStyle:{\"align-items\":\"center\"}},[_c('section',{staticClass:\"q-mt-md row justify-around items-center \"},[_c('q-select',{staticClass:\"q-mr-md\",staticStyle:{\"min-width\":\"16em\",\"background\":\"transparent\"},attrs:{\"rounded\":\"\",\"outlined\":\"\",\"label\":\"Device\",\"disable\":_vm.deviceIsOpen,\"option-label\":function (item) { return item.product; },\"option-value\":function (item) { return item; },\"options\":_vm.deviceList},scopedSlots:_vm._u([{key:\"option\",fn:function(scope){return [_c('q-item',_vm._g(_vm._b({},'q-item',scope.itemProps,false),scope.itemEvents),[_c('q-item-section',[_c('q-item-label',[_vm._v(\"\\n                            \"+_vm._s(scope.opt.product)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            \"+_vm._s(scope.opt.manufacturer)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            \"+_vm._s(scope.opt.path)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            vendorId:\"+_vm._s(scope.opt.vendorId)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            productId:\"+_vm._s(scope.opt.productId)+\"\\n                        \")]),_c('q-item-label',{attrs:{\"caption\":\"\"}},[_vm._v(\"\\n                            serialNumber:\"+_vm._s(scope.opt.serialNumber)+\"\\n                        \")])],1)],1)]}},{key:\"no-option\",fn:function(){return [_c('q-item',[_c('q-item-section',[_vm._v(\"\\n                        No Devices\\n                    \")])],1)]},proxy:true},{key:\"append\",fn:function(){return [_c('q-btn',{attrs:{\"flat\":\"\",\"round\":\"\",\"dense\":\"\",\"hint\":\"search devices\",\"icon\":\"refresh\",\"disable\":_vm.deviceIsOpen,\"loading\":_vm.deviceSearching},on:{\"click\":function($event){return _vm.search()}},scopedSlots:_vm._u([{key:\"loading\",fn:function(){return [_c('q-spinner-radio')]},proxy:true}])})]},proxy:true}]),model:{value:(_vm.deviceSelected),callback:function ($$v) {_vm.deviceSelected=$$v},expression:\"deviceSelected\"}}),_c('q-btn',{style:({opacity: (_vm.deviceSelected ? 'inherit' : '0.05')}),attrs:{\"rounded\":\"\",\"icon\":_vm.deviceIsOpen ? 'phonelink_off' : 'phonelink',\"loading\":_vm.deviceConnecting,\"label\":_vm.deviceIsOpen ? 'disconnect' : 'connect',\"disable\":!_vm.deviceSelected},on:{\"click\":function($event){return _vm.toggleConnect()}},scopedSlots:_vm._u([{key:\"loading\",fn:function(){return [_c('q-spinner-gears')]},proxy:true},{key:\"after\",fn:function(){return [_c('q-icon',{attrs:{\"name\":\"close\"}})]},proxy:true}])})],1),_c('section',[_c('p',{staticClass:\"q-ma-md\"},[_vm._v(\"\\n            \"+_vm._s(_vm.deviceSelected)+\"\\n        \")])]),_c('LogView',{ref:\"mylog\",staticClass:\"q-mt-md q-pa-sm\",attrs:{\"log\":_vm.log},on:{\"update:log\":function($event){_vm.log=$event}}}),_c('section',{staticClass:\"q-mt-md\",staticStyle:{\"min-width\":\"50vw\"}},[_c('q-input',{attrs:{\"filled\":\"\",\"label\":\"Send Message\",\"disable\":!_vm.deviceIsOpen || _vm.deviceConnecting},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.messageSend()}},scopedSlots:_vm._u([{key:\"append\",fn:function(){return [_c('q-icon',{staticClass:\"cursor-pointer\",style:({opacity: (_vm.messagaeToSend !== '' ? 'inherit' : '0.1')}),attrs:{\"name\":\"close\"},on:{\"click\":function($event){_vm.messagaeToSend = ''}}})]},proxy:true},{key:\"after\",fn:function(){return [_c('q-btn',{directives:[{name:\"ripple\",rawName:\"v-ripple\"}],attrs:{\"round\":\"\",\"dense\":\"\",\"flat\":\"\",\"icon\":\"send\",\"disable\":!_vm.deviceIsOpen || _vm.deviceConnecting},on:{\"click\":function($event){return _vm.messageSend()}}})]},proxy:true}]),model:{value:(_vm.messagaeToSend),callback:function ($$v) {_vm.messagaeToSend=$$v},expression:\"messagaeToSend\"}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <q-page\n        class=\"flex column\"\n        style=\"align-items: center;\"\n    >\n        <section class=\"q-mt-md row justify-around items-center \">\n            <q-select\n                rounded\n                outlined\n                class=\"q-mr-md\"\n                style=\"min-width:16em; background: transparent\"\n                label=\"Device\"\n                :disable=\"deviceIsOpen\"\n                v-model=\"deviceSelected\"\n                :option-label=\"(item) => item.product\"\n                :option-value=\"(item) => item\"\n                :options=\"deviceList\"\n            >\n                <template v-slot:option=\"scope\">\n                    <q-item\n                        v-bind=\"scope.itemProps\"\n                        v-on=\"scope.itemEvents\"\n                    >\n                        <q-item-section>\n                            <q-item-label>\n                                {{ scope.opt.product }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                {{ scope.opt.manufacturer }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                {{ scope.opt.path }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                vendorId:{{ scope.opt.vendorId }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                productId:{{ scope.opt.productId }}\n                            </q-item-label>\n                            <q-item-label caption>\n                                serialNumber:{{ scope.opt.serialNumber }}\n                            </q-item-label>\n                        </q-item-section>\n                    </q-item>\n                </template>\n                <template v-slot:no-option>\n                    <q-item>\n                        <q-item-section>\n                            No Devices\n                        </q-item-section>\n                    </q-item>\n                </template>\n                <template v-slot:append>\n                    <q-btn\n                        flat\n                        round\n                        dense\n                        hint=\"search devices\"\n                        icon=\"refresh\"\n                        :disable=\"deviceIsOpen\"\n                        :loading=\"deviceSearching\"\n                        @click=\"search()\"\n                    >\n                        <template v-slot:loading>\n                            <q-spinner-radio />\n                        </template>\n                    </q-btn>\n                </template>\n            </q-select>\n\n            <q-btn\n                rounded\n                :icon=\"deviceIsOpen ? 'phonelink_off' : 'phonelink'\"\n                :style=\"{opacity: (deviceSelected ? 'inherit' : '0.05')}\"\n                :loading=\"deviceConnecting\"\n                @click=\"toggleConnect()\"\n                :label=\"deviceIsOpen ? 'disconnect' : 'connect'\"\n                :disable=\"!deviceSelected\"\n            >\n                <template v-slot:loading>\n                    <q-spinner-gears />\n                </template>\n                <template v-slot:after>\n                    <q-icon\n                        name=\"close\"\n                    />\n                </template>\n            </q-btn>\n        </section>\n        <section>\n            <p class=\"q-ma-md\">\n                {{ deviceSelected }}\n            </p>\n        </section>\n\n        <LogView\n            class=\"q-mt-md q-pa-sm\"\n            ref=\"mylog\"\n            :log.sync=\"log\"\n        />\n        <section\n            class=\"q-mt-md\"\n            style=\"min-width: 50vw\"\n        >\n            <q-input\n                filled\n                label=\"Send Message\"\n                v-model=\"messagaeToSend\"\n                :disable=\"!deviceIsOpen || deviceConnecting\"\n                @keyup.enter=\"messageSend()\"\n            >\n                <template v-slot:append>\n                    <q-icon\n                        :style=\"{opacity: (messagaeToSend !== '' ? 'inherit' : '0.1')}\"\n                        name=\"close\"\n                        @click=\"messagaeToSend = ''\"\n                        class=\"cursor-pointer\"\n                    />\n                </template>\n                <template v-slot:after>\n                    <q-btn\n                        round\n                        v-ripple\n                        dense\n                        flat\n                        icon=\"send\"\n                        :disable=\"!deviceIsOpen || deviceConnecting\"\n                        @click=\"messageSend()\"\n                    />\n                </template>\n            </q-input>\n        </section>\n    </q-page>\n</template>\n\n<script>\nimport { extend } from 'quasar'\nimport LogView from 'components/LogView.vue'\n\nconst dummyResponder = {\n    vendorId: -1,\n    productId: -1,\n    path: '/dummyResponder/0',\n    serialNumber: '42',\n    manufacturer: 's-light.eu',\n    product: 'dummyResponder',\n    release: -1,\n    interface: -1,\n    usagePage: -1,\n    usage: -1\n}\n\nexport default {\n    name: 'PageSerialTest',\n    data () {\n        return {\n            hidAvailable: false,\n            device: undefined,\n            parser: undefined,\n            deviceList: [dummyResponder],\n            deviceSelected: null,\n            deviceIsOpen: false,\n            deviceSearching: false,\n            deviceConnecting: false,\n            messagaeToSend: 'Hello World :-)',\n            log: undefined\n        }\n    },\n    methods: {\n        toggleConnect () {\n            console.group('toggleConnect()')\n            this.deviceConnecting = true\n            // console.log('this.deviceConnecting', this.deviceConnecting)\n            // console.log('this.deviceIsOpen', this.deviceIsOpen)\n            if (this.deviceIsOpen) {\n                console.log('we will close now..')\n                this.deviceClose()\n                console.log('close done.')\n            } else {\n                console.log('we will open now..')\n                this.deviceOpen()\n            }\n            console.groupEnd()\n        },\n        deviceOpen () {\n            console.group('deviceOpen()')\n            // console.log(`this.deviceSelected.path '${this.deviceSelected.path}'`)\n            console.log(`this.deviceSelected '${this.deviceSelected}'`)\n            // if (this.deviceSelected.startsWith('dummyResponder')) {\n            if (this.deviceSelected.path.startsWith('/dummyResponder/')) {\n                setTimeout(() => {\n                    // we're done, we reset loading state\n                    this.deviceConnecting = false\n                    this.deviceIsOpen = true\n                }, 500)\n            } else {\n                if (this.hidAvailable) {\n                    try {\n                        this.device = new HID.HID(this.deviceSelected.path)\n                        this.device.on('error', (err) => {\n                            this.$refs.mylog.addEntrySpecial(err)\n                        })\n                        this.device.on('data', (data) => {\n                            this.messageReceive(data)\n                        })\n                        this.deviceIsOpen = true\n                        this.deviceConnecting = false\n                    } catch (e) {\n                        console.error('device open failed:\\n', e)\n                        this.deviceIsOpen = false\n                        this.deviceConnecting = false\n                    }\n                }\n            }\n            console.groupEnd()\n        },\n        deviceClose () {\n            // if (this.deviceSelected.startsWith('dummyResponder')) {\n            if (this.deviceSelected.path.startsWith('/dummyResponder/')) {\n                setTimeout(() => {\n                    // we're done, we reset loading state\n                    this.deviceConnecting = false\n                    this.deviceIsOpen = false\n                }, 500)\n            } else {\n                // console.log('this.device', this.device)\n                if (this.hidAvailable && this.device) {\n                    this.deviceConnecting = true\n                    this.device.close()\n                    this.deviceIsOpen = false\n                    this.deviceConnecting = false\n                }\n            }\n        },\n        messageSend () {\n            console.group('messageSend')\n            console.log('messagaeToSend:', this.messagaeToSend)\n            if (this.deviceSelected.path.startsWith('/dummyResponder/')) {\n                console.log('send to dummyResponder')\n                const recMessage = this.messagaeToSend\n                setTimeout(() => {\n                    this.messageReceive(recMessage)\n                }, 1000)\n            } else {\n                if (this.hidAvailable) {\n                    console.log('hid is available.')\n                    try {\n                        console.log('write to device')\n                        // this.device.write([0x05, 42, 0xff])\n                        const messgeAsCharCodeArray = (\n                            Array.from(this.messagaeToSend)\n                                .map((val) => val.charCodeAt(0))\n                        )\n                        this.device.write(messgeAsCharCodeArray)\n                    } catch (e) {\n                        console.error('write failed:\\n', e)\n                    }\n                }\n            }\n            this.$refs.mylog.addEntryOut(this.messagaeToSend)\n            this.messagaeToSend = ''\n            console.groupEnd()\n        },\n        messageReceive (value) {\n            this.$refs.mylog.addEntryIn(value)\n        },\n        search () {\n            console.group('search for devices..')\n            this.deviceSearching = true\n            if (this.hidAvailable) {\n                // TODO: check/find async version..\n                // HID.devices().then(\n                //     devices => {\n                //         // use code from the 'if part'\n                //     },\n                //     err => {\n                //         console.error('HID.devices:', err)\n                //         this.deviceSearching = false\n                //     }\n                // )\n                const devices = HID.devices()\n                if (devices) {\n                    // reset list\n                    const dummyResponderNew = {}\n                    extend(dummyResponderNew, dummyResponder)\n                    this.deviceList = [dummyResponderNew]\n                    // use new list\n                    for (let device of devices) {\n                        console.log(`device ${device}`)\n                        // filter results..\n                        // if (device.vendorId) {\n                        //     // console.log(device)\n                        //     this.deviceList.push(device)\n                        // }\n                    }\n                    this.deviceList.push(...devices)\n                    // cleanup\n                    this.deviceSelected = this.deviceList[this.deviceList.length - 1]\n                    this.deviceSearching = false\n                } else {\n                    console.error('HID.devices:', 'failed.')\n                    this.deviceSearching = false\n                }\n            } else {\n                // simulate a delay\n                setTimeout(() => {\n                    // we're done, we reset loading state\n                    const dummyResponderNew = {}\n                    // https://quasar.dev/quasar-utils/other-utils#(Deep)-Copy-Objects\n                    extend(dummyResponderNew, dummyResponder)\n                    dummyResponderNew.path = '/dummyResponder/' + this.deviceList.length\n                    dummyResponderNew.serialNumber = 42 + (this.deviceList.length * 100)\n                    dummyResponderNew.product = 'dummyResponder new' + this.deviceList.length\n\n                    this.deviceList.push(dummyResponderNew)\n                    this.deviceSearching = false\n                }, 2000)\n            }\n            console.groupEnd()\n        }\n    },\n    computed: {\n        // thing: function () {\n        //     let result = []\n        //     for (let port of this.deviceList) {\n        //         result.push(port.path)\n        //     }\n        //     return result\n        // }\n    },\n    mounted: function () {\n        console.group('mounted..')\n        // this.deviceSelected = this.deviceList[0]\n        if (HID) {\n            // console.info('list of HID devices:')\n            // for (let device of HID.devices()) {\n            //     console.log(device)\n            // }\n\n            // console.group('setup HID usage')\n            try {\n                HID.devices()\n                this.hidAvailable = true\n            } catch (e) {\n                this.hidAvailable = false\n                console.error(e)\n            }\n            // console.groupEnd()\n            this.search()\n        }\n        if (!this.hidAvailable) {\n            console.log('create some dummyResponder entries..')\n            this.search()\n            this.search()\n            this.search()\n        }\n        console.groupEnd()\n    },\n    beforeDestroy: function () {\n        console.group('beforeDestroy..')\n        if (this.hidAvailable) {\n            if (this.device && this.device.isOpen) {\n                console.group('close devices.')\n                this.device.close()\n                // TODO: implement\n            }\n        }\n        console.groupEnd()\n    },\n    filters: {\n    },\n    components: {\n        LogView\n    }\n}\n\n// https://quasar.dev/quasar-plugins/web-storage\n// this.$q.localStorage.set(key, value)\n// let value = this.$q.localStorage.getItem(key)\n//\n// this.$q.sessionStorage.set(key, value)\n// let value = this.$q.sessionStorage.getItem(key)\n</script>\n\n<style lang=\"stylus\">\n</style>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./hid.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./hid.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./hid.vue?vue&type=template&id=23a6b82c&\"\nimport script from \"./hid.vue?vue&type=script&lang=js&\"\nexport * from \"./hid.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $defineProperty = require('./_object-dp');\nvar createDesc = require('./_property-desc');\n\nmodule.exports = function (object, index, value) {\n  if (index in object) $defineProperty.f(object, index, createDesc(0, value));\n  else object[index] = value;\n};\n"],"sourceRoot":""}